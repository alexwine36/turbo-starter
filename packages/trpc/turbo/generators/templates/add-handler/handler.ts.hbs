import type { TRPCContextInnerWithSession } from '@repo/trpc/src/server/create-context';
import type { {{ schemaName }} } from './{{ baseHandlerFile }}-schema'
import { z } from 'zod';
{{#if handlerReturnType}}
import { format{{ handleDataType }},
{{ prismaTable }}SelectFields
 } from "@repo/common-types";
{{/if}}

type {{ handlerOptions }} = {
    ctx: TRPCContextInnerWithSession;
    input: {{ schemaName }};
}

export const {{ handlerName }} = async ({ ctx, input }: {{handlerOptions}}) => {

    const { prisma, session } = ctx;
    
    const res = {{ handlerContent }}
    {{#if handlerReturnType}}
    return {{ handlerReturnType }};
    {{else}}
    return res;
    {{/if}}
}

export type {{ handlerResponse }} = Awaited<ReturnType<typeof {{ handlerName }}>>;